#!/bin/bash

echo "üöÄ Iniciando MIT Tracking API com GraphQL..."
echo "=============================================="

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Inicie o Docker primeiro."
    exit 1
fi

# Limpar containers anteriores
echo "üßπ Limpando containers anteriores..."
docker-compose -f docker-compose-api.yml down --remove-orphans

# Construir e iniciar servi√ßos
echo "üî® Construindo e iniciando servi√ßos..."
docker-compose -f docker-compose-api.yml up --build -d

# Aguardar servi√ßos estarem prontos
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
sleep 10

# Verificar status dos servi√ßos
echo "üìä Status dos servi√ßos:"
docker-compose -f docker-compose-api.yml ps

echo ""
echo "‚úÖ API inicializada com sucesso!"
echo ""
echo "üîó Endpoints dispon√≠veis:"
echo "  ‚Ä¢ API Principal: http://localhost:8000"
echo "  ‚Ä¢ GraphQL Playground: http://localhost:8000/graphql"
echo "  ‚Ä¢ API Docs (Swagger): http://localhost:8000/docs"
echo "  ‚Ä¢ ReDoc: http://localhost:8000/redoc"
echo "  ‚Ä¢ Health Check: http://localhost:8000/health"
echo "  ‚Ä¢ M√©tricas: http://localhost:8000/metrics"
echo ""
echo "üõ†Ô∏è  Comandos √∫teis:"
echo "  ‚Ä¢ Ver logs da API: docker logs -f mit-api"
echo "  ‚Ä¢ Ver logs do Ollama: docker logs -f mit-ollama"
echo "  ‚Ä¢ Iniciar com agente: ./start-complete.sh"
echo "  ‚Ä¢ Parar tudo: docker-compose -f docker-compose-api.yml down"
echo ""
echo "üìñ Exemplo GraphQL Query:"
echo "  query { ctes { id numero_cte status } }"