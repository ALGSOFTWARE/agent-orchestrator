#!/usr/bin/env python3
"""
Mock MIT Tracking Agent v2 - Para testes do frontend
Simula respostas do agente sem depend√™ncias externas
"""

import asyncio
import json
from datetime import datetime
from typing import Optional, Dict, Any

class MockMITTrackingAgentV2:
    """Vers√£o simulada do MIT Tracking Agent v2 para testes"""
    
    def __init__(self, preferred_provider: Optional[str] = None):
        self.preferred_provider = preferred_provider or "openai"
        self.is_ready = True
        
    async def consultar_logistica(self, message: str, context: Optional[Dict] = None) -> str:
        """Simula consulta log√≠stica com respostas pr√©-definidas"""
        
        # Simular tempo de processamento
        await asyncio.sleep(0.5)
        
        # Respostas baseadas em palavras-chave
        message_lower = message.lower()
        
        if "cte" in message_lower or "conhecimento" in message_lower:
            return self._generate_cte_response(message)
        elif "container" in message_lower or "rastreamento" in message_lower:
            return self._generate_container_response(message)
        elif "bl" in message_lower or "bill" in message_lower:
            return self._generate_bl_response(message)
        elif "status" in message_lower or "situa√ß√£o" in message_lower:
            return self._generate_status_response(message)
        elif "onde" in message_lower or "localiza√ß√£o" in message_lower:
            return self._generate_location_response(message)
        else:
            return self._generate_general_response(message)
    
    def _generate_cte_response(self, message: str) -> str:
        """Resposta para consultas de CT-e"""
        return """üìã **Consulta CT-e - MIT Tracking Agent**

üîç **Informa√ß√µes encontradas:**
‚Ä¢ **CT-e:** 351234567890123456789012345678901234
‚Ä¢ **Status:** EM_TRANSITO
‚Ä¢ **Transportadora:** R√°pido Transportes Ltda
‚Ä¢ **Origem:** S√£o Paulo/SP
‚Ä¢ **Destino:** Rio de Janeiro/RJ
‚Ä¢ **Valor do Frete:** R$ 1.250,00

üìç **√öltima posi√ß√£o:** Rodovia Presidente Dutra, km 285
‚è∞ **Previs√£o de entrega:** 2024-08-18 14:30

üí° *Esta √© uma simula√ß√£o do MIT Tracking Agent v2 para demonstra√ß√£o do sistema.*"""

    def _generate_container_response(self, message: str) -> str:
        """Resposta para consultas de container"""
        return """üö¢ **Rastreamento de Container - MIT Tracking Agent**

üì¶ **Container:** ABCD1234567
‚Ä¢ **Status:** NO_PORTO
‚Ä¢ **Localiza√ß√£o:** Porto de Santos/SP
‚Ä¢ **Linha:** Maersk Line
‚Ä¢ **Navio:** MSC DANIELA

üóìÔ∏è **Cronograma:**
‚Ä¢ **Chegada ao porto:** 2024-08-15 08:00 ‚úÖ
‚Ä¢ **Descarregamento:** 2024-08-17 10:00 üîÑ
‚Ä¢ **Libera√ß√£o prevista:** 2024-08-19 16:00

üìä **Documentos:** BL dispon√≠vel, DI em processamento

üí° *Dados simulados para demonstra√ß√£o do sistema de tracking.*"""

    def _generate_bl_response(self, message: str) -> str:
        """Resposta para consultas de BL"""
        return """üìÑ **Bill of Lading (BL) - MIT Tracking Agent**

üÜî **BL:** MAEU987654321
‚Ä¢ **Embarcador:** Tech Solutions Brasil Ltda
‚Ä¢ **Consignat√°rio:** Import Corp USA
‚Ä¢ **Porto de Origem:** Santos/Brasil
‚Ä¢ **Porto de Destino:** Long Beach/USA

üì¶ **Carga:** 
‚Ä¢ **Descri√ß√£o:** Componentes eletr√¥nicos
‚Ä¢ **Peso:** 15.5 toneladas
‚Ä¢ **Volume:** 28 m¬≥

üö¢ **Transporte:**
‚Ä¢ **Navio:** Ever Given
‚Ä¢ **Viagem:** EG0234
‚Ä¢ **ETA Long Beach:** 2024-08-25

üí° *Informa√ß√µes simuladas do sistema MIT Tracking.*"""

    def _generate_status_response(self, message: str) -> str:
        """Resposta para consultas de status"""
        return """üìä **Status do Sistema - MIT Tracking Agent**

‚úÖ **Servi√ßos Ativos:**
‚Ä¢ Rastreamento CT-e: Online
‚Ä¢ Tracking de Containers: Online  
‚Ä¢ Consulta BL: Online
‚Ä¢ GPS em tempo real: Online

üìà **Estat√≠sticas:**
‚Ä¢ CT-es monitorados: 1.247
‚Ä¢ Containers ativos: 89
‚Ä¢ BLs processados hoje: 34
‚Ä¢ Entregas conclu√≠das: 156

‚ö° **Performance:**
‚Ä¢ Tempo de resposta m√©dio: 0.3s
‚Ä¢ Uptime: 99.8%
‚Ä¢ √öltima atualiza√ß√£o: 2024-08-17 03:15

üí° *Dashboard do MIT Tracking Agent v2.*"""

    def _generate_location_response(self, message: str) -> str:
        """Resposta para consultas de localiza√ß√£o"""
        return """üìç **Localiza√ß√£o - MIT Tracking Agent**

üöõ **Cargas em Tr√¢nsito:**

**CT-e 35123...1234:**
‚Ä¢ üìç Rodovia BR-116, km 125 (Regi√£o de Campinas/SP)
‚Ä¢ ‚è∞ √öltima atualiza√ß√£o: 14:32
‚Ä¢ üéØ Destino: Rio de Janeiro/RJ
‚Ä¢ ‚è±Ô∏è Previs√£o: 4h 20min

**Container ABCD1234567:**
‚Ä¢ üìç Porto de Santos - P√°tio 3, √Årea B12
‚Ä¢ üö¢ Aguardando embarque no MSC MAYA
‚Ä¢ üìÖ Sailing: 2024-08-18 23:00

üó∫Ô∏è **Tracking em tempo real ativo para 23 cargas**

üí° *Posi√ß√µes atualizadas via GPS a cada 15 minutos.*"""

    def _generate_general_response(self, message: str) -> str:
        """Resposta geral para outras consultas"""
        return f"""ü§ñ **MIT Tracking Agent v2** - Sistema de Log√≠stica Inteligente

Ol√°! Sou especializado em consultas log√≠sticas. Posso ajudar com:

üìã **CT-e (Conhecimento de Transporte Eletr√¥nico)**
‚Ä¢ Consulta por n√∫mero
‚Ä¢ Status e rastreamento  
‚Ä¢ Informa√ß√µes de frete

üì¶ **Containers**
‚Ä¢ Tracking mar√≠timo
‚Ä¢ Posi√ß√£o em tempo real
‚Ä¢ Cronogramas de chegada

üìÑ **BL (Bill of Lading)**
‚Ä¢ Consulta de conhecimentos
‚Ä¢ Status de documenta√ß√£o
‚Ä¢ Informa√ß√µes de carga

**Sua mensagem:** "{message}"

üí° *Digite sua consulta espec√≠fica ou n√∫mero de documento para obter informa√ß√µes detalhadas.*

---
*üîß Esta √© uma simula√ß√£o para demonstra√ß√£o do sistema. Em produ√ß√£o, conectaria com OpenAI/Gemini.*"""

    async def shutdown(self):
        """Cleanup quando necess√°rio"""
        pass
    
    def get_stats(self) -> Dict[str, Any]:
        """Retorna estat√≠sticas do agente simulado"""
        return {
            "provider": self.preferred_provider,
            "status": "ready",
            "requests_processed": 42,
            "avg_response_time": 0.5,
            "mode": "simulation"
        }

# Fun√ß√£o auxiliar para compatibilidade
def create_mock_agent(preferred_provider: Optional[str] = None) -> MockMITTrackingAgentV2:
    """Cria inst√¢ncia do agente simulado"""
    return MockMITTrackingAgentV2(preferred_provider)